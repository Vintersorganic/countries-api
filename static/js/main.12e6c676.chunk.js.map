{"version":3,"sources":["components/styles/responsive.js","components/Country.js","components/CountryCard.js","components/CountryList.js","components/layout/GlobalContainer.js","components/Navbar.js","components/styles/variables.js","components/styles/GlobalStyle.js","components/styles/theme.js","App.js","index.js"],"names":["mobile","props","css","styled","div","fontSize","button","elements","text","width","flexDirection","img","marginLeft","padding","marginTop","h1","ul","paddingLeft","display","flexWrap","li","span","p","alignContent","justifyContent","Link","marginBottom","alignItem","Container","Image","InfoContainer","Info","Span","CountryCard","country","setCountry","theme","useTheme","length","to","alpha3Code","onClick","src","flags","png","name","population","region","capital","options","value","label","CountriesContainer","InputContainer","Input","input","FilterContainer","StyledSelect","Select","CountryList","useState","countries","setCountries","loading","setLoading","setRegion","filter","setFilter","filteredCountries","toLowerCase","includes","countriesByRegion","useEffect","getCountries","a","axios","get","result","data","Search","type","placeholder","onChange","event","target","classNamePrefix","className","colors","primary25","primary","style","margin","color","height","map","numericCode","GlobalContainer","Logo","h2","ButtonContainer","marginRight","Button","Navbar","handleTheme","Brightness4","variables","GlobalStyle","createGlobalStyle","body","lightTheme","darkTheme","App","setTheme","exact","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.12e6c676.chunk.js","sourcesContent":["import { css } from 'styled-components'\r\n\r\nexport const mobile = (props) => { \r\n  return css`\r\n    @media only screen and (max-width: 380px) {\r\n      ${props}\r\n  }\r\n  ` \r\n}\r\n\r\n","import { ArrowBack } from \"@material-ui/icons\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport styled, { useTheme } from \"styled-components\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { mobile } from \"./styles/responsive\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  font-size: 17px;\r\n  ${mobile({ fontSize: 14 })}\r\n`;\r\n\r\nconst Button = styled.button`\r\n  transition: all 0.3s;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  background: ${(props) => props.elements};\r\n  color: ${(props) => props.text};\r\n  border: none;\r\n  padding: 10px;\r\n  width: 10%;\r\n  border-radius: 4px;\r\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\r\n  ${mobile({ width: \"40%\" })}\r\n\r\n  &:hover {\r\n    box-shadow: 0 12px 16px 0 rgba(0, 0, 0, 0.24),\r\n      0 17px 50px 0 rgba(0, 0, 0, 0.19);\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst CountryInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  align-items: center;\r\n  margin-top: 40px;\r\n  ${mobile({ flexDirection: \"column\" })}\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  width: 45%;\r\n  ${mobile({ width: \"100%\" })}\r\n`;\r\n\r\nconst Image = styled.img`\r\n  width: 100%;\r\n  border-radius: 5px;\r\n`;\r\n\r\nconst InfoContainer = styled.div`\r\n  flex: 1;\r\n  padding: 30px;\r\n  margin-left: 60px;\r\n  ${mobile({ width: \"100%\", marginLeft: 0, padding: 0, marginTop: 30 })}\r\n`;\r\n\r\nconst Title = styled.h1`\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst List = styled.ul`\r\n  list-style: none;\r\n  padding: 0;\r\n  column-count: 2;\r\n  column-gap: 100px;\r\n  ${mobile({\r\n    width: \"100%\",\r\n    paddingLeft: 0,\r\n    display: \"flex\",\r\n    flexWrap: \"wrap\",\r\n  })}\r\n`;\r\n\r\nconst ListItem = styled.li`\r\n  font-weight: 600;\r\n  line-height: 2;\r\n`;\r\n\r\nconst Span = styled.span`\r\n  font-weight: 300;\r\n`;\r\n\r\nconst BorderCountriesContainer = styled.p`\r\n  font-weight: 600;\r\n  margin-top: 50px;\r\n  font-size: 15px;\r\n  align-items: center;\r\n  flex-wrap: wrap;\r\n  ${mobile({\r\n    width: \"100%\",\r\n    display: \"flex\",\r\n    alignContent: \"center\",\r\n    fontSize: 14,\r\n    justifyContent: \"space-between\",\r\n  })}\r\n`;\r\n\r\nconst BorderButton = styled(Link)`\r\n  transition: all 0.3s;\r\n  font-size: 18px;\r\n  font-weight: 300;\r\n  background: ${(props) => props.elements};\r\n  padding: 10px;\r\n  color: ${(props) => props.text};\r\n  margin-left: 10px;\r\n  border-radius: 4px;\r\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\r\n  text-decoration: none;\r\n  ${mobile({\r\n    fontSize: 12,\r\n    marginBottom: 10,\r\n    marginLeft: 0,\r\n    alignItem: \"center\",\r\n  })}\r\n\r\n  &:hover {\r\n    box-shadow: 0 12px 16px 0 rgba(0, 0, 0, 0.24),\r\n      0 17px 50px 0 rgba(0, 0, 0, 0.19);\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nconst Country = () => {\r\n  const navigate = useNavigate();\r\n  const theme = useTheme();\r\n  const [country, setCountry] = useState([]);\r\n  const { name } = useParams();\r\n\r\n  useEffect(() => {\r\n    \r\n     axios.get(\r\n        `https://restcountries.com/v2/alpha/${name}`\r\n      ).then(result => {\r\n      console.log(result)\r\n      setCountry(result.data);\r\n      })\r\n   \r\n  }, [name]);\r\n\r\n  const handleBack = () => {\r\n    navigate(\"/\");\r\n  };\r\n\r\n  if (country.length < 1) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <Button text={theme.text} elements={theme.elements} onClick={handleBack}>\r\n        <ArrowBack />\r\n        Back\r\n      </Button>\r\n\r\n      <CountryInfo>\r\n        <ImageContainer>\r\n          <Image src={country.flag} />\r\n        </ImageContainer>\r\n        <InfoContainer>\r\n          <Title>{country.name}</Title>\r\n          <List>\r\n            <ListItem>\r\n              Native Name: <Span>{country.nativeName}</Span>\r\n            </ListItem>\r\n            <ListItem>\r\n              Population: <Span>{country.population}</Span>\r\n            </ListItem>\r\n            <ListItem>\r\n              Region: <Span>{country.region}</Span>\r\n            </ListItem>\r\n            <ListItem>\r\n              Sub Region: <Span>{country.subregion}</Span>\r\n            </ListItem>\r\n            <ListItem>\r\n              Capital: <Span>{country.capital}</Span>\r\n            </ListItem>\r\n            <ListItem>\r\n              Top Level Domain: <Span>{country.topLevelDomain}</Span>\r\n            </ListItem>\r\n            <ListItem>\r\n              Currencies:{\" \"}\r\n              {country.currencies.map((currency, i) => (\r\n                <Span key={i}>\r\n                  {currency.name}{\" \"}\r\n                  {i + 1 === country.currencies.length ? \"\" : \", \"}\r\n                </Span>\r\n              ))}\r\n            </ListItem>\r\n            <ListItem>\r\n              Currencies:{\" \"}\r\n              {country.languages.map((language, i) => (\r\n                <Span key={i}>\r\n                  {language.name}\r\n                  {i + 1 === country.languages.length ? \"\" : \", \"}\r\n                </Span>\r\n              ))}\r\n            </ListItem>\r\n          </List>\r\n          <BorderCountriesContainer>\r\n            <span>Border Countries:</span>\r\n            {country.borders\r\n              ? country.borders.map((border, i) => (\r\n                  <BorderButton\r\n                  key={i}\r\n                    elements={theme.elements}\r\n                    text={theme.text}\r\n                    to={`/${border}`}\r\n                  >\r\n                    {border}\r\n                  </BorderButton>\r\n                ))\r\n              : \"\"}\r\n          </BorderCountriesContainer>\r\n        </InfoContainer>\r\n      </CountryInfo>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Country;\r\n","\r\nimport styled from 'styled-components'\r\nimport { Link } from \"react-router-dom\";\r\nimport { useTheme } from 'styled-components';\r\nimport { mobile } from './styles/responsive'\r\n\r\nconst Container = styled(Link)`\r\n  width: 20%;\r\n  color: ${props => props.text};\r\n  background: ${props => props.elements};\r\n  border-radius: 5px;\r\n  padding-bottom: 20px;\r\n  box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\r\n  text-decoration: none;\r\n  transition: all .3s;\r\n  ${mobile({width: '100%'} )}  \r\n\r\n  &:hover {\r\n    transform: scale(1.1);\r\n    box-shadow: 0 8px 16px 0 rgba(0,0,0,0.2);\r\n  }\r\n`\r\n\r\nconst Image = styled.img`\r\n  width: 100%;\r\n  height: 180px;\r\n  display: block;\r\n  border-radius: 5px;\r\n`\r\n\r\nconst InfoContainer= styled.div`\r\n  padding: 20px;\r\n`\r\n\r\nconst Info = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 10px;\r\n  font-size: 16px;\r\n  font-weight: 600;\r\n  line-height: 1.7;\r\n`\r\n\r\nconst Span = styled.span`\r\n  font-weight: 300;\r\n`\r\n\r\nconst CountryCard = ({ country, setCountry }) => {\r\n  const theme = useTheme()\r\n\r\n  const handleCountry = () => {\r\n      setCountry(country)\r\n  }\r\n\r\n  if (country.length < 1) {\r\n    return null\r\n  }\r\n\r\n  return (\r\n    <Container text={theme.text} elements={theme.elements} to={`${country.alpha3Code}`} onClick={handleCountry}>\r\n      <Image src={country.flags.png} />\r\n      <InfoContainer>\r\n        <h3>{country.name}</h3>\r\n        <Info>\r\n          <p>Population: <Span>{country.population}</Span></p>\r\n          <p>Region: <Span>{country.region}</Span></p>\r\n          <p>Capital: <Span>{country.capital}</Span></p>\r\n        </Info>\r\n      </InfoContainer>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default CountryCard\r\n","import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport styled, { useTheme } from \"styled-components\";\r\nimport CountryCard from \"./CountryCard\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport { Search } from \"@material-ui/icons\";\r\nimport Select from \"react-select\";\r\nimport { mobile } from './styles/responsive'\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nconst options = [\r\n  { value: null, label: \"All Regions\" },\r\n  { value: \"africa\", label: \"Africa\" },\r\n  { value: \"americas\", label: \"Americas\" },\r\n  { value: \"asia\", label: \"Asia\" },\r\n  { value: \"europe\", label: \"Europe\" },\r\n  { value: \"oceania\", label: \"Oceania\" },\r\n];\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst CountriesContainer = styled.div`\r\n  margin-top: 40px;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  gap: 70px;\r\n  flex-wrap: wrap;\r\n\r\n  ${mobile({flexDirection: 'column'} )}  \r\n`;\r\nconst InputContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding-left: 15px;\r\n  border-radius: 5px;\r\n  color: ${props => props.text};\r\n  background: ${props => props.elements};\r\n  width: 20%;\r\n  box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);\r\n  transition: all 0.4s cubic-bezier(0.215, 0.61, 0.355, 1);\r\n  ${mobile({width: '100%', marginBottom: 10} )}\r\n\r\n  &:focus-within {\r\n    box-shadow: 4px 4px 4px rgba(0, 0, 0, 0.4);\r\n  }\r\n`;\r\n\r\nconst Input = styled.input`\r\n  background: transparent;\r\n  border: none;\r\n  width: 100%;\r\n  padding: 10px;\r\n  color: ${props => props.text};\r\n  \r\n\r\n  &:focus {\r\n    outline: none;\r\n    caret-color: ${props => props.text};\r\n    color: ${props => props.text};\r\n  }\r\n\r\n  &::placeholder {\r\n    color: ${props => props.text};\r\n    padding-left: 10px;\r\n  }\r\n`;\r\n\r\nconst FilterContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n\r\n  ${mobile({flexDirection: 'column', justifyContent: 'center'} )}\r\n \r\n`;\r\n\r\nconst StyledSelect = styled(Select)`\r\n  .react-select__placeholder,\r\n  .react-select__single-value {\r\n    color: ${props => props.text};\r\n  }\r\n\r\n  .react-select__option {\r\n    color: ${props => props.text};\r\n  }\r\n\r\n  .react-select__control {\r\n    background-color: ${props => props.elements};\r\n    color: ${props => props.text};\r\n    border-color: transparent;\r\n    padding: 10px;\r\n    border-radius: 5px;\r\n    width: 200px;\r\n    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);\r\n    ${mobile({width: '100%'} )}\r\n  }\r\n\r\n  .react-select__menu {\r\n    color: ${props => props.text};\r\n    background-color: ${props => props.elements};\r\n  }\r\n`;\r\n\r\nconst CountryList = () => {\r\n  const [countries, setCountries] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n  const [region, setRegion] = useState(null);\r\n  const [filter, setFilter] = useState(null)\r\n\r\n\r\n  const theme = useTheme()\r\n\r\n  const filteredCountries = filter ? countries.filter(\r\n    (country) => country.name.toLowerCase().includes(filter)\r\n  ) : countries\r\n\r\n  const countriesByRegion = region ? countries.filter(\r\n    (country) => country.region.toLowerCase() === region\r\n  ) : null;\r\n\r\n\r\n  useEffect(() => {\r\n    \r\n    const getCountries = async () => {\r\n      const result = await axios.get(\"https://restcountries.com/v2/all\")\r\n\r\n      setCountries(result.data);\r\n      setLoading(false)\r\n    \r\n    }\r\n    getCountries()\r\n  }, []);\r\n\r\n  const handleOnChange = (value) => {\r\n    setRegion(value.value);\r\n  };\r\n\r\n  const handleFilter = event => {\r\n    setRegion(null)\r\n    setFilter(event.target.value)\r\n  }\r\n\r\n  return (\r\n    <Container>\r\n      <FilterContainer>\r\n        <InputContainer text={theme.text}\r\n          elements={theme.elements}>\r\n          <Search />\r\n          <Input text={theme.text} type=\"search\" placeholder=\"Search for a Country...\" onChange={handleFilter}/>\r\n        </InputContainer>\r\n        <StyledSelect\r\n          text={theme.text}\r\n          elements={theme.elements}\r\n          classNamePrefix=\"react-select\"\r\n          className=\"react-select-container\"\r\n          options={options}\r\n          onChange={handleOnChange}\r\n          placeholder=\"Filter By Region\"\r\n          theme={(theme) => ({\r\n            ...theme,\r\n            colors: {\r\n              ...theme.colors,\r\n              primary25: 'grey',\r\n              primary: \"\",\r\n            },\r\n          })}\r\n        />\r\n      </FilterContainer>\r\n\r\n      <CountriesContainer>\r\n        {loading ? <Loader\r\n      style={{margin: 'auto', marginTop: '100px'}}\r\n      type=\"Puff\"\r\n      color={theme.text}\r\n      height={100}\r\n      width={100}\r\n    /> : null }\r\n        { !region\r\n          ? filteredCountries.map((country) => (\r\n              <CountryCard country={country} key={country.numericCode} />\r\n            ))\r\n          : countriesByRegion.map((country) => (\r\n            <CountryCard country={country} key={country.numericCode} />\r\n          ))}\r\n      </CountriesContainer>\r\n\r\n      <Outlet />\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default CountryList;\r\n","\r\nimport styled from 'styled-components'\r\n\r\nconst GlobalContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  padding: 40px 50px;\r\n`\r\n\r\n\r\nexport default GlobalContainer\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Brightness4 } from \"@material-ui/icons\";\r\nimport { useTheme } from 'styled-components'\r\nimport { mobile } from './styles/responsive'\r\n\r\nconst Container = styled.div`\r\n  width: 100%;\r\n  height: 90px;\r\n  background: ${props => props.color};\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  box-shadow: 0 2px 3px 0 rgba(0,0,0,.2);\r\n`;\r\n\r\nconst Logo = styled.h2`\r\n  color: ${props => props.color};\r\n  font-weight: 600;\r\n  margin-left: 60px;\r\n  ${mobile({ fontSize: 14, marginLeft: 20})}\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  font-size: 18px;\r\n  color: ${props => props.color};\r\n  margin-right: 60px;\r\n  cursor: pointer;\r\n  transition: .3s;\r\n  ${mobile({ fontSize: 14, marginRight: 20})}\r\n\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nconst Button = styled.button`\r\n  background: none;\r\n  border: none;\r\n  color: ${props => props.color};\r\n  cursor: pointer;\r\n`;\r\n\r\nconst Navbar = ({ handleTheme }) => {\r\n  const theme = useTheme()\r\n\r\n  return (\r\n    <Container color={theme.elements}>\r\n      <Logo color={theme.text}>Where in the world?</Logo>\r\n      <ButtonContainer color={theme.text}>\r\n        <Brightness4 /><Button onClick={handleTheme} color={theme.text}>Dark Mode</Button>\r\n      </ButtonContainer>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { css } from 'styled-components';\r\n\r\nconst variables = css`\r\n\r\n\r\n  :root {\r\n\r\n    //Colors\r\n    --dark-blue: hsl(209, 23%, 22%); //(Dark Mode Elements)\r\n    --very-dark-blue: hsl(207, 26%, 17%); // (Dark Mode Background)\r\n    --very-dark-blue-text: hsl(200, 15%, 8%); // (Light Mode Text)\r\n    --dark-gray: hsl(0, 0%, 52%); // (Light Mode Input)\r\n    --very-dark-gray: hsl(0, 0%, 98%); // (Light Mode Background)\r\n    --white: hsl(0, 0%, 100%); // (Dark Mode Text & Light Mode Elements)\r\n\r\n    // Fonts\r\n \r\n\r\n    // Font-Size\r\n    --fs-homepage-items: 18px;\r\n    --fs-detail-page: 22px;\r\n  }\r\n`\r\n\r\nexport default variables;","import { createGlobalStyle } from \"styled-components\";\r\nimport variables from \"./variables\";\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  ${variables}\r\n\r\n    /*\r\n    1. Use a more-intuitive box-sizing model.\r\n  */\r\n  *, *::before, *::after {\r\n    box-sizing: border-box;\r\n  }\r\n  /*\r\n    2. Remove default margin\r\n  */\r\n  * {\r\n    margin: 0;\r\n  }\r\n  /*\r\n    3. Allow percentage-based heights in the application\r\n  */\r\n  html, body {\r\n    height: 100%;\r\n  }\r\n  /*\r\n    Typographic tweaks!\r\n    4. Add accessible line-height\r\n    5. Improve text rendering\r\n  */\r\n  body {\r\n    line-height: 1.5;\r\n    -webkit-font-smoothing: antialiased;\r\n    background: ${({ theme }) => theme.body};\r\n    color: ${({ theme }) => theme.text};\r\n    font-family:'Nunito Sans', sans-serif;\r\n  }\r\n  /*\r\n    6. Improve media defaults\r\n  */\r\n  img, picture, video, canvas, svg {\r\n    display: block;\r\n    max-width: 100%;\r\n  }\r\n  /*\r\n    7. Remove built-in form typography styles\r\n  */\r\n  input, button, textarea, select {\r\n    font: inherit;\r\n  }\r\n  /*\r\n    8. Avoid text overflows\r\n  */\r\n  p, h1, h2, h3, h4, h5, h6 {\r\n    overflow-wrap: break-word;\r\n  }\r\n  /*\r\n    9. Create a root stacking context\r\n  */\r\n  #root, #__next {\r\n    isolation: isolate;\r\n  }\r\n\r\n  html {\r\n    &::-webkit-scrollbar-track\r\n{\r\n\tborder-radius: 10px;\r\n\tbackground-color: ${({ theme }) => theme.elements};\r\n}\r\n\r\n&::-webkit-scrollbar\r\n{\r\n\twidth: 15px;\r\n\tbackground-color: ${({ theme }) => theme.elements};\r\n}\r\n\r\n&::-webkit-scrollbar-thumb\r\n{\r\n\tborder-radius: 8px;\r\n\t-webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);\r\n\tbackground-color: ${({ theme }) => theme.text}  ;\r\n}\r\n  }\r\n`;\r\n\r\nexport default GlobalStyle;\r\n","export const lightTheme = {\r\n  body: 'hsl(0, 0%, 98%)',\r\n  text: 'hsl(200, 15%, 8%)',\r\n  elements: 'hsl(0, 0%, 100%)',\r\n  input: 'hsl(0, 0%, 52%)'\r\n}\r\n\r\nexport const darkTheme = {\r\n  body: 'hsl(207, 26%, 17%)',\r\n  text: 'hsl(0, 0%, 100%)',\r\n  elements: 'hsl(209, 23%, 22%)',\r\n  input: 'hsl(200, 15%, 8%)'\r\n}\r\n\r\n","import React, { useState } from \"react\";\r\nimport { Routes, Route } from \"react-router-dom\";\r\nimport { ThemeProvider } from \"styled-components\";\r\nimport Country from \"./components/Country\";\r\nimport CountryList from \"./components/CountryList\";\r\nimport GlobalContainer from \"./components/layout/GlobalContainer\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport GlobalStyle from \"./components/styles/GlobalStyle\";\r\nimport { lightTheme, darkTheme } from './components/styles/theme';\r\n\r\n\r\nconst App = () => {\r\n  const [country, setCountry] = useState([]);\r\n  const [theme, setTheme] = useState('light')\r\n\r\n  const handleTheme = () => {\r\n    if (theme === 'light') {\r\n      setTheme('dark')\r\n    } else {\r\n      setTheme('light')\r\n    }\r\n  }\r\n\r\n  return (\r\n    <ThemeProvider theme={theme === 'light' ? lightTheme : darkTheme}>\r\n      <>\r\n        <GlobalStyle />\r\n        <Navbar handleTheme={handleTheme}/>\r\n        <GlobalContainer>\r\n        \r\n          <Routes>\r\n            <Route exact path=\"/\" element={<CountryList setCountry={setCountry} />} />\r\n          </Routes>\r\n        </GlobalContainer>\r\n      </>\r\n    </ThemeProvider>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}